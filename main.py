import telebot
import register
import functions
import keyboard

from settings import data, my_col_u, my_col_p

bot = telebot.TeleBot(data["bot"]["tg_token"])

@bot.message_handler(commands=["start"])
def main_func(message):    
    register.registration(bot, message)

@bot.message_handler(content_types=["text", "photo"])
def get_text(message):
    if message.text == "ü™™ –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å":
        user_info = my_col_u.find_one({"tg_id" : message.chat.id})

        # <b> or <strong> - –∂–∏—Ä–Ω—ã–π
        # <i> or <em> - –Ω–∞–∫–ª–æ–Ω–Ω—ã–π
        t0 = f"*–¢–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å*\n\n" 
        t1 = f"–Ü–º'—è: {user_info['firstname']}\n"
        t2 = f"–ü—Ä—ñ–∑–≤–∏—â–µ: {user_info['lastname']}\n"
        t3 = f"–ü–æ—à—Ç–∞: {user_info['email']}\n"
        t4 = f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {user_info['phone']}\n"
        t5 = f"–ê–¥—Ä–µ—Å–∞: {user_info['address']}\n"

        info_parsed = t0 + t1 + t2 + t3 + t4 + t5
        bot.send_message(message.chat.id, info_parsed, parse_mode="Markdown", reply_markup=keyboard.profile_keyboard)

    elif message.text == "‚úèÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ—Ñ—ñ–ª—é":
        bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –ø–æ–ª–µ, —è–∫–µ –±–∞–∂–∞—î—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏:", parse_mode="Markdown", reply_markup=keyboard.change_profile_keyboard)

    elif message.text == "üîç –ü—Ä–æ –º–∞–≥–∞–∑–∏–Ω":
        t0 = f"*–ü—Ä–æ –º–∞–≥–∞–∑–∏–Ω*\n\n" 
        t1 = f"–ù–∞–∑–≤–∞: {data['bot']['bot_name']}\n"
        t2 = f"–ü–æ—à—Ç–∞: {data['bot']['email']}\n"
        t3 = f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {data['bot']['phone_number']}\n"
        t4 = f"–ê–¥—Ä–µ—Å–∞: {data['bot']['address']}\n"

        info_parsed = t0 + t1 + t2 + t3 + t4
        bot.send_message(message.chat.id, info_parsed, parse_mode="Markdown")
        
    elif message.text == "üõí –ö–æ—à–∏–∫":
        get_user = my_col_u.find_one({"tg_id": message.chat.id})
        user_basket = get_user["basket"]
        info_parsed = "*–ö–æ—à–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞*\n\n"
        whole_price = 0
        for k,v in user_basket.items():
            item_id = k
            item_amount = v
            product = my_col_p.find_one({"id": item_id})
            t1 = f"{item_id}. {product['brand']} {product['name']} ({product['price']} x {item_amount} = {product['price'] * item_amount} –≥—Ä–Ω)\n"
            item_price = product['price'] * item_amount
            info_parsed += t1
            whole_price += item_price
        t2 = f"\n*–£—Å—å–æ–≥–æ –¥–æ —Å–ø–ª–∞—Ç–∏: {whole_price}*"
        info_parsed += t2
        
        bot.send_message(message.chat.id, info_parsed, parse_mode="Markdown", reply_markup=keyboard.basket_keyboard)
        
    elif message.text == "üóë –û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—à–∏–∫":
        my_col_u.update_one(
            {"tg_id": message.chat.id},
                {"$set":
                    {"basket": {}}
                }
        )
        bot.send_message(message.chat.id, "–ö–æ—à–∏–∫ –æ—á–∏—â–µ–Ω–æ! –ü–æ–≤–µ—Ä—Ç–∞—é –¥–æ –º–µ–Ω—é!", reply_markup=keyboard.menu_keyboard)

    elif message.text == "üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥":
        register.registration(bot, message)

    elif message.text == "üìô –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä—ñ–≤":
        
        current_page_number = 0
        my_col_u.update_one(
            {"tg_id": message.chat.id},
            {"$set":
                {"current_page": current_page_number}    
            }
        )
        
        res = functions.catalog_update(0)
        bot.send_message(message.chat.id, "–í–∏ –≤ –∫–∞—Ç–∞–ª–æ–∑—ñ —Ç–æ–≤–∞—Ä—ñ–≤. –û–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π —Ç–æ–≤–∞—Ä:", reply_markup=res)
    
    elif message.text == "‚û°Ô∏è –ù–∞—Å—Ç—É–ø–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞":
        user = my_col_u.find_one({"tg_id": message.chat.id})
        current_page_number = user["current_page"] + 1
        res = functions.catalog_update(current_page_number)
        my_col_u.update_one(
            {"tg_id": message.chat.id},
            {"$set":    
                {"current_page": current_page_number}    
            }
        )
        bot.send_message(message.chat.id, "–ù–∞—Å—Ç—É–ø–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞. –û–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π —Ç–æ–≤–∞—Ä:", reply_markup=res)

    elif message.text == "‚¨ÖÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞":
        user = my_col_u.find_one({"tg_id": message.chat.id})
        current_page_number = user["current_page"] - 1
        res = functions.catalog_update(current_page_number)
        my_col_u.update_one(
            {"tg_id": message.chat.id},
            {"$set":    
                {"current_page": current_page_number}    
            }
        )
        bot.send_message(message.chat.id, "–ü–æ–ø–µ—Ä–µ–¥–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞. –û–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π —Ç–æ–≤–∞—Ä:", reply_markup=res)

while True:
    try:
        bot.infinity_polling()
    except:
        pass